# generated by fastapi-codegen:
#   filename:  openapi.yaml
#   timestamp: 2025-06-29T11:48:22+00:00

from __future__ import annotations

from typing import List, Optional

from pydantic import BaseModel, Field


class Address(BaseModel):
    address_1: Optional[str] = Field(
        None,
        description='Street portion of the address',
        examples=['123 Example Street'],
    )
    address_2: Optional[str] = Field(
        None, description='Additional address information', examples=['Apt. 456']
    )
    city: Optional[str] = Field(None, description='City name', examples=['Holmdel'])
    country: Optional[str] = Field(None, description='Country code', examples=['US'])
    postal_code: Optional[str] = Field(
        None, description='Postal code', examples=['07733']
    )
    state: Optional[str] = Field(
        None, description='State/Province code', examples=['NJ']
    )


class AddressWithTimeZone(BaseModel):
    address_1: Optional[str] = Field(
        None,
        description='Street portion of the address',
        examples=['123 Example Street'],
    )
    address_2: Optional[str] = Field(
        None, description='Additional address information', examples=['Apt. 456']
    )
    city: Optional[str] = Field(None, description='City name', examples=['Holmdel'])
    country: Optional[str] = Field(None, description='Country code', examples=['US'])
    postal_code: Optional[str] = Field(
        None, description='Postal code', examples=['07733']
    )
    state: Optional[str] = Field(
        None, description='State/Province code', examples=['NJ']
    )
    time_zone: Optional[str] = Field(
        None, description='Time zone', examples=['America/New York']
    )


class FirstHref(BaseModel):
    href: Optional[str] = None


class LastHref(BaseModel):
    href: Optional[str] = None


class Location(BaseModel):
    address: Optional[AddressWithTimeZone] = None
    id: Optional[float] = Field(
        None, description='Unique identifier of the location', examples=[327910]
    )
    name: Optional[str] = Field(
        None, description='Name of the location', examples=['Headquarters']
    )


class LocationEmbeddedObject(BaseModel):
    data: Optional[Location] = None


class LocationsEmbeddedObject(BaseModel):
    data: Optional[List[Location]] = None


class NextHref(BaseModel):
    href: Optional[str] = None


class PrevHref(BaseModel):
    href: Optional[str] = None


class SelfHref(BaseModel):
    href: Optional[str] = None


class Account(BaseModel):
    address: Optional[Address] = None
    id: Optional[float] = Field(
        None, description='Unique identifier of the account', examples=[571700]
    )
    name: Optional[str] = Field(
        None, description='Name of the account', examples=['Vonage']
    )
    status: Optional[str] = Field(
        None, description='Status of the account', examples=['ACTIVE']
    )


class AccountEmbeddedObject(BaseModel):
    data: Optional[Account] = None


class Links(BaseModel):
    first: Optional[FirstHref] = None
    last: Optional[LastHref] = None
    next: Optional[NextHref] = None
    prev: Optional[PrevHref] = None
    self: Optional[SelfHref] = None


class LocationHalResponse(BaseModel):
    field_embedded: Optional[LocationEmbeddedObject] = Field(None, alias='_embedded')
    field_links: Optional[Links] = Field(None, alias='_links')
    page: Optional[float] = Field(None, description='Current page number', examples=[1])
    page_size: Optional[float] = Field(
        None, description='Number of records per page', examples=[100]
    )
    total_items: Optional[float] = Field(
        None, description='Total number of records', examples=[100]
    )
    total_pages: Optional[float] = Field(
        None, description='Total number of pages', examples=[10]
    )


class LocationsHalResponse(BaseModel):
    field_embedded: Optional[LocationsEmbeddedObject] = Field(None, alias='_embedded')
    field_links: Optional[Links] = Field(None, alias='_links')
    page: Optional[float] = Field(None, examples=[1])
    page_size: Optional[float] = Field(None, examples=[100])
    total_items: Optional[float] = Field(None, examples=[100])
    total_pages: Optional[float] = Field(None, examples=[10])


class AccountHalResponse(BaseModel):
    field_embedded: Optional[AccountEmbeddedObject] = Field(None, alias='_embedded')
    field_links: Optional[Links] = Field(None, alias='_links')
    page: Optional[float] = Field(None, description='Current page number', examples=[1])
    page_size: Optional[float] = Field(
        None, description='Number of records per page', examples=[100]
    )
    total_items: Optional[float] = Field(
        None, description='Total number of records', examples=[100]
    )
    total_pages: Optional[float] = Field(
        None, description='Total number of pages', examples=[10]
    )
